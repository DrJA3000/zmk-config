/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        jumpto0 {
            bindings = <&to 0>;
            key-positions = <29 25>;
        };

        nkey {
            bindings = <&kp N>;
            key-positions = <40 41>;
            layers = <5 6>;
        };

        layerjump {
            bindings = <&to 5>;
            key-positions = <30 34>;
        };

        btlayer {
            bindings = <&to 3>;
            key-positions = <1 13 25>;
        };

        new_combo {
            bindings = <&snipping>;
            key-positions = <7 9>;
            global-quick-tap-ms = <250>;
        };

        copy {
            bindings = <&copy>;
            key-positions = <30 31>;
            global-quick-tap-ms = <250>;
        };

        paste {
            bindings = <&paste>;
            key-positions = <31 32>;
            global-quick-tap-ms = <250>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <18 19>;
            global-quick-tap-ms = <250>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <6 7>;
            global-quick-tap-ms = <250>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <10 22>;
            global-quick-tap-ms = <250>;
        };

        mute_google {
            bindings = <&cntr_D>;
            key-positions = <9 21 33>;
            global-quick-tap-ms = <250>;
        };

        redo {
            bindings = <&kp RC(Y)>;
            key-positions = <8 20>;
            global-quick-tap-ms = <250>;
        };

        chat_wows {
            bindings = <&to 0>;
            key-positions = <36 37>;
            layers = <5>;
        };

        task_man {
            bindings = <&kp LC(RS(ESCAPE))>;
            key-positions = <26 14 2>;
            global-quick-tap-ms = <250>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <7 19>;
            global-quick-tap-ms = <250>;
        };
    };

    behaviors {
        hold_left: hold_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LEFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            quick-tap-ms = <500>;
            global-quick-tap;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };
        hold_right: hold_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_RIGHT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-on-release;
            global-quick-tap;
            quick-tap-ms = <500>;
            hold-trigger-key-positions = <0 1 5 12 13 14 15 16 17 24 25 26 27 28 29 2 3 4>;
        };
    };

    macros {
        snipping: snipping {
            compatible = "zmk,behavior-macro";
            label = "SNIPPING";
            #binding-cells = <0>;
            bindings = <&kp RG(RS(S))>;
        };
        copy: copy {
            compatible = "zmk,behavior-macro";
            label = "COPY";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
        };
        paste: paste {
            compatible = "zmk,behavior-macro";
            label = "PASTE";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>;
        };
        cntr_D: cntr_D {
            compatible = "zmk,behavior-macro";
            label = "CNTR_D";
            #binding-cells = <0>;
            bindings = <&kp LC(D)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q                  &kp W             &kp E                  &kp R  &kp T        &kp Y    &kp U  &kp I                   &kp O              &kp P                             &trans
&trans  &hold_left LEFT_ALT A  &hold_left TAB S  &hold_left LEFT_GUI D  &kp F  &kp G        &kp H    &kp J  &hold_right LEFT_GUI K  &hold_right TAB L  &hold_right RIGHT_ALT APOSTROPHE  &trans
&trans  &kp Z                  &kp X             &kp C                  &kp V  &kp B        &kp N    &kp M  &kp COMMA               &kp DOT            &kp FSLH                          &trans
                                                 &kp LEFT_SHIFT         &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LEFT_CONTROL
            >;

            label = "Base";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1     &kp N2           &kp N3      &kp N4    &kp N5       &kp N6         &kp N7     &kp N8    &kp N9     &kp N0                &trans
&trans  &kp ESC    &kp C_VOLUME_UP  &kp C_MUTE  &kp LGUI  &kp PG_UP    &kp DELETE     &kp MINUS  &kp UP    &kp EQUAL  &kp SEMICOLON         &trans
&trans  &kp GRAVE  &kp C_VOL_DN     &trans      &trans    &kp PG_DN    &kp BACKSPACE  &kp LEFT   &kp DOWN  &kp RIGHT  &kp NON_US_BACKSLASH  &trans
                                    &trans      &trans    &kp SPACE    &kp RET        &trans     &trans
            >;

            label = "Layer 1";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4     &kp F5             &kp F6     &kp F7    &kp F8    &kp F9    &kp F10   &trans
&trans  &kp F11  &kp F12  &trans  &kp LCTRL  &kp DEL            &kp LALT   &kp TAB   &kp LBKT  &kp RBKT  &kp BSLH  &trans
&trans  &trans   &trans   &trans  &trans     &kp PRINTSCREEN    &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE  &trans
                          &trans  &trans     &trans             &trans     &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans        &kp N7  &kp N8    &kp N9  &kp LS(ASTERISK)  &trans
&trans  &bt BT_CLR    &trans        &trans        &trans        &trans          &snipping     &kp N4  &kp N5    &kp N6  &kp PLUS          &trans
&trans  &trans        &trans        &trans        &trans        &trans          &kp KP_EQUAL  &kp N1  &kp N2    &kp N3  &kp MINUS         &trans
                                    &trans        &trans        &trans          &kp PERIOD    &kp N0  &kp FSLH
            >;

            label = "sys layer";
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans        &kp ESCAPE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4  &kp N5  &kp NUMBER_6
&trans  &trans  &trans  &trans  &kp LEFT_ALT  &kp TAB       &kp O         &kp G         &kp W             &kp B         &kp F   &kp 0
&trans  &trans  &trans  &trans  &trans        &trans        &kp X         &kp A         &kp S             &kp D         &kp C   &kp 0
                        &trans  &trans        &kp ENTER     &kp LSHIFT    &mo 6         &kp LEFT_CONTROL
            >;

            label = "WOWS";
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &kp ESC    &kp R   &kp T     &kp Y            &kp U        &kp I         &kp 0
&trans  &trans  &trans  &trans  &trans  &trans     &kp F3  &kp F5    &kp F9           &kp F11      &kp F12       &trans
&trans  &trans  &trans  &trans  &trans  &trans     &kp H   &kp LALT  &kp PRINTSCREEN  &kp KP_PLUS  &kp KP_MINUS  &trans
                        &trans  &trans  &trans     &trans  &trans    &trans
            >;

            label = "WOWS_1";
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
