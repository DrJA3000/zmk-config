/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        jumpto0 {
            bindings = <&to 0>;
            key-positions = <29 25>;
        };

        nkey {
            bindings = <&kp N>;
            key-positions = <40 41>;
        };

        layerjump {
            bindings = <&to 5>;
            key-positions = <30 34>;
        };

        btlayer {
            bindings = <&to 3>;
            key-positions = <0 12 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W           &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BSPC
&kp LCTRL  &kp A  &kp S           &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L   &kp SQT   &kp SQT
&kp LSHFT  &kp Z  &kp X           &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                         &kp LEFT_SHIFT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RSHFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp ESC   &kp N1  &kp N2  &kp N3    &kp N4     &kp N5           &kp N6     &kp N7    &kp N8     &kp N9                &kp N0  &kp BSPC
   &trans  &kp ESC  &trans  &trans  &kp LGUI  &kp PG_UP       &kp DELETE  &kp MINUS    &kp UP  &kp EQUAL         &kp SEMICOLON    &trans
&kp LSHFT    &kp 0  &trans  &trans    &trans  &kp PG_DN    &kp BACKSPACE   &kp LEFT  &kp DOWN  &kp RIGHT  &kp NON_US_BACKSLASH    &trans
                            &trans    &trans  &kp SPACE          &kp RET     &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB   &kp F1   &kp F2  &kp F3  &kp F4     &kp F5       &kp F6    &kp F7    &kp F8    &kp F9   &kp F10   &kp BSPC
&kp LCTRL  &kp F11  &kp F12  &trans  &trans     &trans     &kp LALT   &kp TAB  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT   &trans   &trans  &trans  &trans     &trans    &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &trans  &trans  &kp SPACE      &kp RET    &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &trans  &kp N7    &kp N8  &kp N9  &kp LS(ASTERISK)  &trans
&trans    &bt BT_CLR        &trans        &trans        &trans        &trans       &trans  &kp N4    &kp N5  &kp N6          &kp PLUS  &trans
&trans        &trans        &trans        &trans        &trans        &trans       &trans  &kp N1    &kp N2  &kp N3         &kp MINUS  &trans
                                          &trans        &trans        &trans    &kp EQUAL  &kp N0  &kp FSLH
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp P  &kp NUMBER_6
&trans  &trans  &trans  &trans  &trans  &trans           &kp TILDE         &kp G         &kp W         &kp B  &kp F         &kp 0
&trans  &trans  &trans  &trans  &trans  &trans               &kp X         &kp A         &kp S         &kp D  &kp C         &kp 0
                        &trans  &trans  &trans    &kp LEFT_CONTROL         &mo 6     &kp SPACE
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans     &kp R   &kp T   &kp Y        &kp U         &kp I   &kp 0
&trans  &trans  &trans  &trans  &trans  &trans    &kp F3  &kp F5  &kp F9      &kp F11       &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp KP_PLUS  &kp KP_MINUS  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
